################################################################################
#                                 PC1 Scripts
################################################################################

#(Routing)
#h1 ---- h2 ---- (bridge) physical (bridge) --- h3 --- h4

sudo ip link add h1-eth0 type veth peer name h2-eth0
sudo ip link add h2-eth1 type veth peer name phy1-eth0

sudo ip netns add h1
sudo ip netns add h2

sudo ip link set h1-eth0 netns h1
sudo ip link set h2-eth0 netns h2
sudo ip link set h2-eth1 netns h2

sudo ip netns exec h1 ifconfig lo up
sudo ip netns exec h2 ifconfig lo up

sudo ip netns exec h1 ifconfig h1-eth0 10.10.1.2/24
sudo ip netns exec h2 ifconfig h2-eth0 10.10.1.1/24
sudo ip netns exec h2 ifconfig h2-eth1 10.10.2.1/24

sudo ip netns exec h2 sysctl -w net.ipv4.ip_forward=1
sudo ip netns exec h2 ip route add 10.10.3.0/24 via 10.10.2.2
sudo ip netns exec h1 ip route add 10.10.3.0/24 via 10.10.1.1
sudo ip netns exec h1 ip route add 192.168.0.0/16 via 10.10.1.1
sudo ip netns exec h1 ip route add 192.170.0.0/16 via 10.10.1.1



#Write the following block in a file and run the file in background mode or normal mode
sudo brctl addbr br0
sudo brctl addif br0 phy1-eth0
sudo brctl addif br0 eth0
sudo ifconfig eth0 down
sudo ifconfig phy1-eth0 down
sudo ifconfig eth0 0.0.0.0 up
sudo ifconfig phy1-eth0 0.0.0.0 up
sudo ifconfig br0 10.1.0.28/16
sudo ip route add default via 10.1.0.1
#End Block


#Now wait fot the connection
sudo ip netns exec h1 ping -c1 10.10.1.1
sudo ip netns exec h2 ping -c1 10.10.1.2
sudo ip netns exec h2 ping -c1 10.10.2.1





################################################################################
#                                  PC2 Scripts
################################################################################
#(Routing)
#h1 ---- h2 ---- (bridge) physical (bridge) --- h3 --- h4

sudo ip link add phy2-eth0 type veth peer name h3-eth0
sudo ip link add h3-eth1 type veth peer name h4-eth0
sudo ip netns add h3
sudo ip netns add h4
sudo ip link set h3-eth0 netns h3
sudo ip link set h3-eth1 netns h3
sudo ip link set h4-eth0 netns h4
sudo ip netns exec h3 ifconfig lo up
sudo ip netns exec h4 ifconfig lo up
sudo ip netns exec h3 ifconfig h3-eth0 10.10.2.2/24
sudo ip netns exec h3 ifconfig h3-eth1 10.10.3.1/24
sudo ip netns exec h4 ifconfig h4-eth0 10.10.3.2/24
sudo ip netns exec h3 sysctl -w net.ipv4.ip_forward=1
sudo ip netns exec h3 ip route add 10.10.1.0/24 via 10.10.2.1
sudo ip netns exec h4 ip route add 10.10.1.0/24 via 10.10.3.1
sudo ip netns exec h4 ip route add 192.168.0.0/16 via 10.10.3.1
sudo ip netns exec h4 ip route add 192.170.0.0/16 via 10.10.3.1


#Write the following block in a file and run the file in background mode or normal mode
sudo brctl addbr br0
sudo brctl addif br0 phy2-eth0
sudo brctl addif br0 eth0
sudo ifconfig eth0 down
sudo ifconfig phy2-eth0 down
sudo ifconfig eth0 0.0.0.0 up
sudo ifconfig phy2-eth0 0.0.0.0 up
sudo ifconfig br0 10.1.0.29/16
sudo ip route add default via 10.1.0.1
#End Block


sudo ip netns exec h3 ping -c1 10.10.3.1
sudo ip netns exec h4 ping -c1 10.10.3.2
sudo ip netns exec h3 ping -c1 10.10.2.1



########################################################################################
#                                      Compile
########################################################################################
#PC1(pollux): ~/expt/batching/HybridTCPTrafficPC1.java
#PC2(pollux): ~/expt/hybrid_traffic/HybridTCPTrafficPC2.java

#PC1 (on pollux - h1, h2) In /root/expt/hybrid_traffic/
java -DRUNTIME_ENV=[c_slave1,d_slave1,eth2,10.10.1.1,eth3,10.10.2.1] -DPORTAL_LINKS=c_slave1:eth2,topnet.right_net.r.portal_if_10_10_1_0,c_slave1:eth3,topnet.right_net.r.portal_if_10_10_2_0 -jar ~/primogeni/netscript/dist/jprime.jar create batching_test1 HybridTCPTrafficPC1.java 192.168.0.0/16


#PC2 (on castor - h3, h4) In /root/expt/hybrid_traffic/
java -DRUNTIME_ENV=[c_slave1,d_slave1,eth2,10.10.2.2,eth3,10.10.3.1] -DPORTAL_LINKS=c_slave1:eth2,topnet.portal_router.portal_if_10_10_3_0,c_slave1:eth3,topnet.center_router.portal_if_10_10_2_0 -jar ~/primogeni/netscript/dist/jprime.jar create batch_test1 SolvingPortalTCP2.java 192.170.0.0/16



#PC1 Pollux: Now disable ip forwarding and run simulator and test ping again through simulator
sudo ip netns exec h2 sysctl -w net.ipv4.ip_forward=0
#PC2 castor
sudo ip netns exec h3 sysctl -w net.ipv4.ip_forward=0


sudo ip netns exec h1 ping -c1 10.10.3.2
#Shouldnt work
#sudo ip netns exec h4 ping -c1 10.10.1.2
#Shouldnt work


########################################################################################
#						 RUN
########################################################################################

							#PC1(on pollux - h2)
sudo ip netns exec h2 sysctl -w net.ipv4.ip_forward=0
sudo ip netns exec h2 /root/primogeni_batch_portal/netsim/primex -tp 10.10.2.1 271 -tp 10.10.1.1 274 1800 batching_test1_part_1.tlv

#Route zzz
sudo ip netns exec h2 ifconfig h2-eth1 down
sudo ip netns exec h2 ifconfig h2-eth1 up
sudo ip netns exec h2 ip route del 10.10.3.0/24
sudo ip netns exec h2 ip route add 10.10.3.0/24 via 10.10.2.2
sudo ip netns exec h1 ip route add 192.168.0.0/16 via 10.10.1.1
sudo ip netns exec h1 ip route
sudo ip netns exec h2 ip route




							#PC2(on castor - h3)
sudo ip netns exec h3 sysctl -w net.ipv4.ip_forward=0
sudo ip netns exec h3 /root/primogeni/netsim/primex -tp 10.10.2.2 56 -tp 10.10.3.1 84 1800 batching_test1_part_1.tlv

#Route zzz
sudo ip netns exec h3 ifconfig h3-eth0 down
sudo ip netns exec h3 ifconfig h3-eth0 up
sudo ip netns exec h3 ip route del 10.10.1.0/24
sudo ip netns exec h3 ip route add 10.10.1.0/24 via 10.10.2.1
sudo ip netns exec h3 ip route del 192.168.0.0/16
sudo ip netns exec h3 ip route add 192.168.0.0/16 via 10.10.2.1
sudo ip netns exec h3 ip route
sudo ip netns exec h4 ip route


#(on pollux)
sudo ip netns exec h2 ping -c1 10.10.2.2

#castor
sudo ip netns exec h3 ping -c1 10.10.2.1

#Test PC2 castor
sudo ip netns exec h1 ping 10.10.1.1
sudo ip netns exec h1 ping 192.168.0.1
sudo ip netns exec h2 ping 10.10.2.2




#Test PC2 castor
sudo ip netns exec h4 ping 10.10.3.1
sudo ip netns exec h4 ping 192.170.0.1
sudo ip netns exec h4 ping 192.168.0.1



#Capture packet: vv for verbose and X for payload
sudo ip netns exec h4 tcpdump -nnvvXS > tmp.txt




#IPERF test:
#Server Pc1: 
sudo ip netns exec h1 iperf -s

#Client Pc2:
sudo ip netns exec h4 iperf -c 10.10.1.2










########################################################################
#							RESULTS
########################################################################
h1(portal10.10.1.1)-----h2(primex)---|||ph_link||||--h3(primex)-----h4(portal 10.10.3.2)

h2 implemented batching on writer thread



--------------------------TCP result---------10ms batching-
with 10 ms time for batching(in portal_device writer thread ):
Iperf server result: 
-------------------
when h1 is iperf server
	10 sec run [  6]  0.0-10.2 sec  13.8 MBytes  11.3 Mbits/sec
	10 sec run [  6]  0.0-10.3 sec  16.1 MBytes  13.1 Mbits/sec
	10 sec run [  7]  0.0-10.2 sec  13.5 MBytes  11.1 Mbits/sec
	10 sec run [  6]  0.0-10.1 sec  15.8 MBytes  13.1 Mbits/sec
	10 sec run [  6]  0.0-10.2 sec  23.5 MBytes  19.3 Mbits/sec  ----Simulator restarted at this point
	10 sec run [  7]  0.0-10.3 sec  13.6 MBytes  11.1 Mbits/sec
	10 sec run [  6]  0.0-10.2 sec  13.6 MBytes  11.2 Mbits/sec
	
	100 sec run  [  6]  0.0-100.1 sec   137 MBytes  11.5 Mbits/sec



when h4 is the iperf server:
	10 sec run [  6]  0.0-10.3 sec  27.9 MBytes  22.6 Mbits/sec  (first sec 28.6)
	10 sec run [  7]  0.0-10.1 sec  29.6 MBytes  24.6 Mbits/sec  (first sec 31.9)
	10 sec run [  7]  0.0-10.1 sec  28.0 MBytes  23.2 Mbits/sec
	10 sec run [  6]  0.0-10.2 sec  26.9 MBytes  22.2 Mbits/sec
	10 sec run [  6]  0.0-10.3 sec  29.2 MBytes  23.9 Mbits/sec  (first sec 38.8) 
	10 sec run [  5]  0.0-10.1 sec  24.9 MBytes  20.7 Mbits/sec--simulator restarted (first sec 26.8)

	100 sec run [  6]  0.0-100.1 sec   261 MBytes  21.9 Mbits/sec (first sec 30.7)
	

First 1-2 second has slightly higher data


100 sec run
100 sec run


Pingtime:
root@castor:~# sudo ip netns exec h4 ping 10.10.1.2
PING 10.10.1.2 (10.10.1.2) 56(84) bytes of data.
64 bytes from 10.10.1.2: icmp_req=1 ttl=61 time=21.5 ms
64 bytes from 10.10.1.2: icmp_req=2 ttl=61 time=21.4 ms
64 bytes from 10.10.1.2: icmp_req=3 ttl=61 time=21.5 ms
64 bytes from 10.10.1.2: icmp_req=4 ttl=61 time=21.5 ms
64 bytes from 10.10.1.2: icmp_req=59 ttl=61 time=21.5 ms

64 bytes from 10.10.3.2: icmp_req=1 ttl=61 time=21.4 ms
64 bytes from 10.10.3.2: icmp_req=2 ttl=61 time=21.4 ms
64 bytes from 10.10.3.2: icmp_req=3 ttl=61 time=21.5 ms
64 bytes from 10.10.3.2: icmp_req=4 ttl=61 time=21.4 ms
64 bytes from 10.10.3.2: icmp_req=5 ttl=61 time=21.4 ms

--------------------------------------------------------------UDP
sudo ip netns exec h4 iperf -c 10.10.1.2 -b -b 100M -t 100
[  6] 26.0-27.0 sec  1.44 KBytes  11.8 Kbits/sec   0.017 ms    0/    1 (0%)
[  6] 27.0-28.0 sec  1.44 KBytes  11.8 Kbits/sec   0.016 ms    0/    1 (0%)
[  6] 28.0-29.0 sec  1.44 KBytes  11.8 Kbits/sec   0.016 ms    0/    1 (0%)
[  6] 29.0-30.0 sec  1.44 KBytes  11.8 Kbits/sec   0.016 ms    0/    1 (0%)
[  6] 30.0-31.0 sec  1.44 KBytes  11.8 Kbits/sec   0.017 ms    0/    1 (0%)
[  6] 31.0-32.0 sec  1.44 KBytes  11.8 Kbits/sec   0.018 ms    0/    1 (0%)
[  6] 32.0-33.0 sec  1.44 KBytes  11.8 Kbits/sec   0.019 ms    0/    1 (0%)
[  6] 33.0-34.0 sec  1.44 KBytes  11.8 Kbits/sec   0.018 ms    0/    1 (0%)
[  6] 34.0-35.0 sec  1.44 KBytes  11.8 Kbits/sec   0.017 ms    0/    1 (0%)
[  6] 35.0-36.0 sec  1.44 KBytes  11.8 Kbits/sec   0.016 ms    0/    1 (0%)
[  6] 36.0-37.0 sec  1.44 KBytes  11.8 Kbits/sec   0.016 ms    0/    1 (0%)
[  7] 30.0-31.0 sec  0.00 Bytes  0.00 bits/sec   0.000 ms    0/    0 (-nan%)
[  7] 31.0-32.0 sec  0.00 Bytes  0.00 bits/sec   0.000 ms    0/    0 (-nan%)
[  7] 32.0-33.0 sec  0.00 Bytes  0.00 bits/sec   0.000 ms    0/    0 (-nan%)
[  7] 33.0-34.0 sec  33.0 MBytes   277 Mbits/sec   0.004 ms 32574/56121 (58%)
[  7] 34.0-35.0 sec  61.2 MBytes   513 Mbits/sec   0.005 ms 59048/102682 (58%)
[  7] 35.0-36.0 sec  0.00 Bytes  0.00 bits/sec   0.005 ms    0/    0 (-nan%)
[  7] 36.0-37.0 sec  0.00 Bytes  0.00 bits/sec   0.005 ms    0/    0 (-nan%)
[  7] 37.0-38.0 sec  0.00 Bytes  0.00 bits/sec   0.005 ms    0/    0 (-nan%)
[  7] 38.0-39.0 sec  0.00 Bytes  0.00 bits/sec   0.005 ms    0/    0 (-nan%)
[  7] 39.0-40.0 sec  0.00 Bytes  0.00 bits/sec   0.005 ms    0/    0 (-nan%)
[  7] 40.0-41.0 sec  0.00 Bytes  0.00 bits/sec   0.005 ms    0/    0 (-nan%)
[  7] 41.0-42.0 sec  60.3 MBytes   506 Mbits/sec   0.007 ms 44763/87753 (51%)
[  7] 42.0-43.0 sec  96.2 MBytes   807 Mbits/sec   0.005 ms 77536/146188 (53%)
[  7] 43.0-44.0 sec  96.5 MBytes   810 Mbits/sec   0.004 ms 85323/154177 (55%)



Other side udp(doesnt run properly)
sudo ip netns exec h1 iperf -c 10.10.3.2 -u -b 10M
[  5] local 10.10.3.2 port 5001 connected with 10.10.1.2 port 35525
[ ID] Interval       Transfer     Bandwidth        Jitter   Lost/Total Datagrams
[  5]  0.0- 0.2 sec  7.26 MBytes   244 Mbits/sec   9.060 ms 3322/ 8504 (39%)
[  6] local 10.10.3.2 port 5001 connected with 10.10.1.2 port 47891
[  6]  0.0- 0.2 sec  7.50 MBytes   252 Mbits/sec  11.618 ms 3153/ 8505 (37%)
[  5] local 10.10.3.2 port 5001 connected with 10.10.1.2 port 42724
[  5]  0.0- 0.1 sec  7.72 MBytes   825 Mbits/sec   1.360 ms 3000/ 8505 (35%)



########################################################################
######################################################################## 1 ms batching 
Model has a 1000Mbps BW however we are geiing 100mbps+.
One portal on pc2 had a link to the router to router_certer at 1Gbps.
pc1 had the portal connected to the center_router or right_r


h1(portal10.10.1.1)-----h2(primex)---|||ph_link||||--h3(primex)-----h4(portal 10.10.3.2)

h2 implemented batching on writer thread. h1 h2 residing in same machine

ping test:
h1 to 10.10.3.2  (sudo ip netns exec h1 ping 10.10.3.2)

64 bytes from 10.10.3.2: icmp_req=1 ttl=61 time=3.96 ms
64 bytes from 10.10.3.2: icmp_req=2 ttl=61 time=3.51 ms
64 bytes from 10.10.3.2: icmp_req=3 ttl=61 time=3.55 ms


Opposite Ping:(h4 to h1)
64 bytes from 10.10.1.2: icmp_req=1 ttl=61 time=3.48 ms
64 bytes from 10.10.1.2: icmp_req=2 ttl=61 time=3.47 ms
64 bytes from 10.10.1.2: icmp_req=3 ttl=61 time=3.48 ms



TCP iperf:
	server h1
	client h4
		10 sec [  6]  0.0-10.0 sec  70.1 MBytes  58.6 Mbits/sec
		10 sec run	[  6]  0.0-10.0 sec   131 MBytes   110 Mbits/sec
		10 sec run [  7]  0.0-10.0 sec   133 MBytes   111 Mbits/sec

Opposite side:
	server h4
	client h1
		10 sec run [  6]  0.0-10.0 sec   145 MBytes   121 Mbits/sec
		60 sec run [  5]  0.0-60.0 sec   965 MBytes   135 Mbits/sec
		60 sec run [  6]  0.0-60.0 sec   981 MBytes   137 Mbits/sec

Original:
		server h1
		client h4
		60 sec  [  7]  0.0-60.0 sec   952 MBytes   133 Mbits/sec
		60 sec  [  6]  0.0-60.0 sec   911 MBytes   127 Mbits/sec
		60 sec 	[  7]  0.0-60.0 sec   769 MBytes   108 Mbits/sec
			[  7] local 10.10.1.2 port 5001 connected with 10.10.3.2 port 44526
			[  7]  0.0- 1.0 sec  5.90 MBytes  49.5 Mbits/sec
			[  7]  1.0- 2.0 sec  7.01 MBytes  58.8 Mbits/sec
			[  7]  2.0- 3.0 sec  7.55 MBytes  63.3 Mbits/sec
			[  7]  3.0- 4.0 sec  7.04 MBytes  59.0 Mbits/sec
			[  7]  4.0- 5.0 sec  6.89 MBytes  57.8 Mbits/sec
			[  7]  5.0- 6.0 sec  7.57 MBytes  63.5 Mbits/sec
			[  7]  6.0- 7.0 sec  6.92 MBytes  58.1 Mbits/sec
			[  7]  7.0- 8.0 sec  6.53 MBytes  54.8 Mbits/sec
			[  7]  8.0- 9.0 sec  6.69 MBytes  56.1 Mbits/sec
			[  7]  9.0-10.0 sec  7.05 MBytes  59.1 Mbits/sec
			[  7] 10.0-11.0 sec  5.98 MBytes  50.1 Mbits/sec
			[  7] 11.0-12.0 sec  13.8 MBytes   116 Mbits/sec
			[  7] 12.0-13.0 sec  14.9 MBytes   125 Mbits/sec
			[  7] 13.0-14.0 sec  11.0 MBytes  92.6 Mbits/sec
			[  7] 14.0-15.0 sec  11.3 MBytes  94.7 Mbits/sec
			[  7] 15.0-16.0 sec  12.3 MBytes   103 Mbits/sec
			[  7] 16.0-17.0 sec  11.4 MBytes  95.2 Mbits/sec
			[  7] 17.0-18.0 sec  14.4 MBytes   121 Mbits/sec
			[  7] 18.0-19.0 sec  15.2 MBytes   127 Mbits/sec
			[  7] 19.0-20.0 sec  12.9 MBytes   108 Mbits/sec
			[  7] 20.0-21.0 sec  14.9 MBytes   125 Mbits/sec
			[  7] 21.0-22.0 sec  11.0 MBytes  92.6 Mbits/sec
			[  7] 22.0-23.0 sec  11.0 MBytes  92.2 Mbits/sec
			[  7] 23.0-24.0 sec  14.5 MBytes   122 Mbits/sec
			[  7] 24.0-25.0 sec  14.3 MBytes   120 Mbits/sec
			[  7] 25.0-26.0 sec  15.7 MBytes   132 Mbits/sec
			[  7] 26.0-27.0 sec  16.9 MBytes   142 Mbits/sec
			[  7] 27.0-28.0 sec  19.3 MBytes   162 Mbits/sec
			[  7] 28.0-29.0 sec  17.3 MBytes   145 Mbits/sec
			[  7] 29.0-30.0 sec  15.4 MBytes   129 Mbits/sec
			[  7] 30.0-31.0 sec  19.6 MBytes   164 Mbits/sec
			[  7] 31.0-32.0 sec  19.7 MBytes   165 Mbits/sec
			[  7] 32.0-33.0 sec  16.3 MBytes   137 Mbits/sec
			[  7] 33.0-34.0 sec  14.1 MBytes   119 Mbits/sec
			[  7] 34.0-35.0 sec  13.4 MBytes   112 Mbits/sec
			[  7] 35.0-36.0 sec  13.1 MBytes   110 Mbits/sec
			[  7] 36.0-37.0 sec  13.5 MBytes   113 Mbits/sec
			[  7] 37.0-38.0 sec  13.4 MBytes   112 Mbits/sec
			[  7] 38.0-39.0 sec  13.0 MBytes   109 Mbits/sec
			[  7] 39.0-40.0 sec  13.4 MBytes   112 Mbits/sec
			[  7] 40.0-41.0 sec  12.1 MBytes   101 Mbits/sec
			[  7] 41.0-42.0 sec  12.7 MBytes   107 Mbits/sec
			[  7] 42.0-43.0 sec  18.1 MBytes   152 Mbits/sec
			[  7] 43.0-44.0 sec  19.7 MBytes   165 Mbits/sec
			[  7] 44.0-45.0 sec  15.5 MBytes   130 Mbits/sec
			[  7] 45.0-46.0 sec  13.4 MBytes   112 Mbits/sec
			[  7] 46.0-47.0 sec  13.9 MBytes   116 Mbits/sec
			[  7] 47.0-48.0 sec  13.3 MBytes   111 Mbits/sec
			[  7] 48.0-49.0 sec  13.7 MBytes   115 Mbits/sec
			[  7] 49.0-50.0 sec  13.5 MBytes   114 Mbits/sec
			[  7] 50.0-51.0 sec  12.2 MBytes   102 Mbits/sec
			[  7] 51.0-52.0 sec  13.4 MBytes   113 Mbits/sec
			[  7] 52.0-53.0 sec  12.9 MBytes   108 Mbits/sec
			[  7] 53.0-54.0 sec  12.6 MBytes   105 Mbits/sec
			[  7] 54.0-55.0 sec  13.3 MBytes   112 Mbits/sec
			[  7] 55.0-56.0 sec  12.6 MBytes   106 Mbits/sec
			[  7] 56.0-57.0 sec  13.9 MBytes   117 Mbits/sec
			[  7] 57.0-58.0 sec  11.6 MBytes  97.2 Mbits/sec
			[  7] 58.0-59.0 sec  13.6 MBytes   114 Mbits/sec
			[  7] 59.0-60.0 sec  14.7 MBytes   124 Mbits/sec
			[  7]  0.0-60.0 sec   769 MBytes   108 Mbits/sec





########################################################################
######################################################################## 500 micro second batching 
h1(portal10.10.1.1)-----h2(primex)---|||ph_link||||--h3(primex)-----h4(portal 10.10.3.2)

h2 implemented batching on writer thread. h1 h2 residing in same machine

ping test:
h1 to 10.10.3.2       sudo ip netns exec h1 ping 10.10.3.2

64 bytes from 10.10.3.2: icmp_req=1 ttl=61 time=2.89 ms
64 bytes from 10.10.3.2: icmp_req=2 ttl=61 time=2.43 ms
64 bytes from 10.10.3.2: icmp_req=3 ttl=61 time=2.43 ms
64 bytes from 10.10.3.2: icmp_req=4 ttl=61 time=2.39 ms
64 bytes from 10.10.3.2: icmp_req=5 ttl=61 time=2.40 ms
64 bytes from 10.10.3.2: icmp_req=6 ttl=61 time=2.42 ms

Opposite Ping:(h4 to h1)     sudo ip netns exec h4 ping 10.10.1.2
PING 10.10.1.2 (10.10.1.2) 56(84) bytes of data.
64 bytes from 10.10.1.2: icmp_req=1 ttl=61 time=2.33 ms
64 bytes from 10.10.1.2: icmp_req=2 ttl=61 time=2.40 ms
64 bytes from 10.10.1.2: icmp_req=5 ttl=61 time=2.41 ms


TCP iperf:
	server h1: sudo ip netns exec h1 iperf -s -i 1
	client h4: sudo ip netns exec h4 iperf -c 10.10.1.2
		10 sec run [  5]  0.0-10.0 sec   179 MBytes   150 Mbits/sec
		10 sec run [  5]  0.0-10.0 sec   207 MBytes   174 Mbits/sec
		10 sec run [  5]  0.0-10.0 sec   188 MBytes   157 Mbits/sec
		60 sec run [  5]  0.0-60.0 sec  1.07 GBytes   153 Mbits/sec

Opposite side:
	server h4: sudo ip netns exec h4 iperf -s -i 1
	client h1: sudo ip netns exec h1 iperf -c 10.10.3.2
		10 sec run [  6]  0.0-10.0 sec   242 MBytes   202 Mbits/sec
		10 sec run [  7]  0.0-10.0 sec   250 MBytes   209 Mbits/sec
		10 sec run [  6]  0.0-10.0 sec   230 MBytes   192 Mbits/sec
		60 sec run [  6]  0.0-60.0 sec  1.34 GBytes   192 Mbits/sec
		60 sec run [  5]  0.0-60.0 sec  1.37 GBytes   196 Mbits/sec


########################################################################
######################################################################## 250 micro second batching 
h1(portal10.10.1.1)-----h2(primex)---|||ph_link||||--h3(primex)-----h4(portal 10.10.3.2)

h2 implemented batching on writer thread. h1 h2 residing in same machine

PING test:
	h1 to 10.10.3.2       sudo ip netns exec h1 ping 10.10.3.2
	PING 10.10.3.2 (10.10.3.2) 56(84) bytes of data.
	64 bytes from 10.10.3.2: icmp_req=1 ttl=61 time=2.19 ms
	64 bytes from 10.10.3.2: icmp_req=2 ttl=61 time=1.80 ms
	64 bytes from 10.10.3.2: icmp_req=3 ttl=61 time=1.79 ms
	64 bytes from 10.10.3.2: icmp_req=4 ttl=61 time=1.84 ms
	64 bytes from 10.10.3.2: icmp_req=5 ttl=61 time=1.85 ms
	64 bytes from 10.10.3.2: icmp_req=1 ttl=61 time=1.82 ms

Opposite Ping:(h4 to h1)     sudo ip netns exec h4 ping 10.10.1.2
	PING 10.10.1.2 (10.10.1.2) 56(84) bytes of data.
	64 bytes from 10.10.1.2: icmp_req=1 ttl=61 time=1.75 ms
	64 bytes from 10.10.1.2: icmp_req=2 ttl=61 time=1.83 ms
	64 bytes from 10.10.1.2: icmp_req=3 ttl=61 time=1.80 ms
	64 bytes from 10.10.1.2: icmp_req=4 ttl=61 time=1.89 ms
	64 bytes from 10.10.1.2: icmp_req=5 ttl=61 time=1.92 ms
	64 bytes from 10.10.1.2: icmp_req=1 ttl=61 time=1.89 ms



TCP iperf:
	server h1: sudo ip netns exec h1 iperf -s -i 1
	client h4: sudo ip netns exec h4 iperf -c 10.10.1.2
		10 sec run [  5]  0.0-10.0 sec   224 MBytes   188 Mbits/sec
		10 sec run [  5]  0.0-10.0 sec   245 MBytes   205 Mbits/sec
		10 sec run [  5]  0.0-10.0 sec   244 MBytes   205 Mbits/sec
		60 sec run [  5]  0.0-60.0 sec  1.51 GBytes   217 Mbits/sec

Opposite side:
	server h4: sudo ip netns exec h4 iperf -s -i 1
	client h1: sudo ip netns exec h1 iperf -c 10.10.3.2
		10 sec run [  5]  0.0-10.0 sec   288 MBytes   241 Mbits/sec
		10 sec run [  5]  0.0-10.0 sec   292 MBytes   245 Mbits/sec
		10 sec run [  5]  0.0-10.0 sec   268 MBytes   225 Mbits/sec
		60 sec run [  5]  0.0-60.0 sec  1.69 GBytes   242 Mbits/sec




########################################################################
######################################################################## 1 micro second batching 
h1(portal10.10.1.1)-----h2(primex)---|||ph_link||||--h3(primex)-----h4(portal 10.10.3.2)

h2 implemented batching on writer thread. h1 h2 residing in same machine

One run of primex in h2 was terminated by reporting:
	terminate called after throwing an instance of 'std::bad_alloc'
	   what():  std::bad_alloc
Second simulator on h3 shut down once with the following:
	terminate called after throwing an instance of 'std::bad_alloc'
	   what():  std::bad_alloc



PING test:
	h1 to 10.10.3.2       sudo ip netns exec h1 ping 10.10.3.2
	PING 10.10.3.2 (10.10.3.2) 56(84) bytes of data.
	64 bytes from 10.10.3.2: icmp_req=1 ttl=61 time=1.10 ms
	64 bytes from 10.10.3.2: icmp_req=2 ttl=61 time=1.17 ms
	64 bytes from 10.10.3.2: icmp_req=3 ttl=61 time=1.19 ms
	

Opposite Ping:(h4 to h1)     sudo ip netns exec h4 ping 10.10.1.2
	PING 10.10.1.2 (10.10.1.2) 56(84) bytes of data.
	64 bytes from 10.10.1.2: icmp_req=1 ttl=61 time=1.12 ms
	64 bytes from 10.10.1.2: icmp_req=2 ttl=61 time=1.09 ms
	64 bytes from 10.10.1.2: icmp_req=3 ttl=61 time=1.13 ms
	64 bytes from 10.10.1.2: icmp_req=4 ttl=61 time=1.10 ms
	64 bytes from 10.10.1.2: icmp_req=5 ttl=61 time=1.10 ms


TCP iperf:
	server h1: sudo ip netns exec h1 iperf -s -i 1
	client h4: sudo ip netns exec h4 iperf -c 10.10.1.2
		10 sec run [  5]  0.0-10.0 sec   860 MBytes   722 Mbits/sec
		10 sec run [  5]  0.0-10.0 sec   909 MBytes   763 Mbits/sec
		10 sec run [  5]  0.0-10.0 sec   940 MBytes   788 Mbits/sec
		60 sec run: terminated simulator on h2 after 26 sec but was outputting similar data before termination
		60 sec run: terminated simulator on h3  after 8 sec but was outputting similar data


Opposite side:
	server h4: sudo ip netns exec h4 iperf -s -i 1
	client h1: sudo ip netns exec h1 iperf -c 10.10.3.2
		10 sec run [  5]  0.0-10.0 sec   819 MBytes   686 Mbits/sec
		10 sec run [  5]  0.0-10.0 sec   880 MBytes   738 Mbits/sec
		10 sec run [  5]  0.0-10.0 sec   856 MBytes   718 Mbits/sec
		60 sec run simulator 1 is terminated after 25 sec




########################################################################
######################################################################## 0 second batching 
h1(portal10.10.1.1)-----h2(primex)---|||ph_link||||--h3(primex)-----h4(portal 10.10.3.2)

h2 implemented batching on writer thread. h1 h2 residing in same machine

One run of primex in h2 was terminated by reporting:
	terminate called after throwing an instance of 'std::bad_alloc'
	   what():  std::bad_alloc
Second simulator on h3 shut down once with the following:
	terminate called after throwing an instance of 'std::bad_alloc'
	   what():  std::bad_alloc



PING test:
	h1 to 10.10.3.2       sudo ip netns exec h1 ping 10.10.3.2
		PING 10.10.3.2 (10.10.3.2) 56(84) bytes of data.
		64 bytes from 10.10.3.2: icmp_req=1 ttl=61 time=1.05 ms
		64 bytes from 10.10.3.2: icmp_req=2 ttl=61 time=1.10 ms
		64 bytes from 10.10.3.2: icmp_req=3 ttl=61 time=1.07 ms
		64 bytes from 10.10.3.2: icmp_req=4 ttl=61 time=1.05 ms
		64 bytes from 10.10.3.2: icmp_req=5 ttl=61 time=1.14 ms
		64 bytes from 10.10.3.2: icmp_req=6 ttl=61 time=1.11 ms
	

Opposite Ping:(h4 to h1)     sudo ip netns exec h4 ping 10.10.1.2
		PING 10.10.1.2 (10.10.1.2) 56(84) bytes of data.
		64 bytes from 10.10.1.2: icmp_req=1 ttl=61 time=1.04 ms
		64 bytes from 10.10.1.2: icmp_req=2 ttl=61 time=1.05 ms
		64 bytes from 10.10.1.2: icmp_req=3 ttl=61 time=1.07 ms
		64 bytes from 10.10.1.2: icmp_req=4 ttl=61 time=1.01 ms
		64 bytes from 10.10.1.2: icmp_req=5 ttl=61 time=1.09 ms



TCP iperf:
	server h1: sudo ip netns exec h1 iperf -s -i 1
	client h4: sudo ip netns exec h4 iperf -c 10.10.1.2
		10 sec run [  6]  0.0-10.0 sec   769 MBytes   643 Mbits/sec
		10 sec run [  7]  0.0-10.0 sec   813 MBytes   681 Mbits/sec
		10 sec run [  6]  0.0-10.0 sec   795 MBytes   665 Mbits/sec
		60 sec run: terminated simulator on h2 after 26 sec but was outputting similar data before termination
		60 sec run: terminated simulator on h3  after 8 sec but was outputting similar data


Opposite side:
	server h4: sudo ip netns exec h4 iperf -s -i 1
	client h1: sudo ip netns exec h1 iperf -c 10.10.3.2
		10 sec run [  5]  0.0-10.0 sec   867 MBytes   727 Mbits/sec
		10 sec run [  5]  0.0-10.0 sec   880 MBytes   738 Mbits/sec
		10 sec run [  5]  0.0-10.0 sec   861 MBytes   722 Mbits/sec
		60 sec run simulator 2 is terminated after 2 sec

