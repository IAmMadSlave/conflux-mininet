################################################################################
#                                 PC1 Scripts
################################################################################

#(Routing)
#h1 ---- h2 ---- (bridge) physical (bridge) --- h3 --- h4

sudo ip link add h1-eth0 type veth peer name h2-eth0
sudo ip link add h2-eth1 type veth peer name phy1-eth0

sudo ip netns add h1
sudo ip netns add h2

sudo ip link set h1-eth0 netns h1
sudo ip link set h2-eth0 netns h2
sudo ip link set h2-eth1 netns h2

sudo ip netns exec h1 ifconfig lo up
sudo ip netns exec h2 ifconfig lo up

sudo ip netns exec h1 ifconfig h1-eth0 10.10.1.2/24
sudo ip netns exec h2 ifconfig h2-eth0 10.10.1.1/24
sudo ip netns exec h2 ifconfig h2-eth1 10.10.2.1/24

sudo ip netns exec h2 sysctl -w net.ipv4.ip_forward=1
sudo ip netns exec h2 ip route add 10.10.3.0/24 via 10.10.2.2
sudo ip netns exec h1 ip route add 10.10.3.0/24 via 10.10.1.1
sudo ip netns exec h1 ip route add 192.168.0.0/16 via 10.10.1.1
sudo ip netns exec h1 ip route add 192.170.0.0/16 via 10.10.1.1



#Write the following block in a file and run the file in background mode or normal mode
sudo brctl addbr br0
sudo brctl addif br0 phy1-eth0
sudo brctl addif br0 eth0
sudo ifconfig eth0 down
sudo ifconfig phy1-eth0 down
sudo ifconfig eth0 0.0.0.0 up
sudo ifconfig phy1-eth0 0.0.0.0 up
sudo ifconfig br0 10.1.0.28/16
sudo ip route add default via 10.1.0.1
#End Block


#Now wait fot the connection
sudo ip netns exec h1 ping -c1 10.10.1.1
sudo ip netns exec h2 ping -c1 10.10.1.2
sudo ip netns exec h2 ping -c1 10.10.2.1





################################################################################
#                                  PC2 Scripts
################################################################################
#(Routing)
#h1 ---- h2 ---- (bridge) physical (bridge) --- h3 --- h4

sudo ip link add phy2-eth0 type veth peer name h3-eth0
sudo ip link add h3-eth1 type veth peer name h4-eth0
sudo ip netns add h3
sudo ip netns add h4
sudo ip link set h3-eth0 netns h3
sudo ip link set h3-eth1 netns h3
sudo ip link set h4-eth0 netns h4
sudo ip netns exec h3 ifconfig lo up
sudo ip netns exec h4 ifconfig lo up
sudo ip netns exec h3 ifconfig h3-eth0 10.10.2.2/24
sudo ip netns exec h3 ifconfig h3-eth1 10.10.3.1/24
sudo ip netns exec h4 ifconfig h4-eth0 10.10.3.2/24
sudo ip netns exec h3 sysctl -w net.ipv4.ip_forward=1
sudo ip netns exec h3 ip route add 10.10.1.0/24 via 10.10.2.1
sudo ip netns exec h4 ip route add 10.10.1.0/24 via 10.10.3.1
sudo ip netns exec h4 ip route add 192.168.0.0/16 via 10.10.3.1
sudo ip netns exec h4 ip route add 192.170.0.0/16 via 10.10.3.1


#Write the following block in a file and run the file in background mode or normal mode
sudo brctl addbr br0
sudo brctl addif br0 phy2-eth0
sudo brctl addif br0 eth0
sudo ifconfig eth0 down
sudo ifconfig phy2-eth0 down
sudo ifconfig eth0 0.0.0.0 up
sudo ifconfig phy2-eth0 0.0.0.0 up
sudo ifconfig br0 10.1.0.29/16
sudo ip route add default via 10.1.0.1
#End Block


sudo ip netns exec h3 ping -c1 10.10.3.1
sudo ip netns exec h4 ping -c1 10.10.3.2
sudo ip netns exec h3 ping -c1 10.10.2.1



########################################################################################
#                                      Compile
########################################################################################
#PC1(pollux): ~/expt/hybrid_traffic/HybridTCPTrafficPC1.java
#PC2(pollux): ~/expt/hybrid_traffic/HybridTCPTrafficPC2.java

#PC1 (on pollux - h1, h2) In /root/expt/hybrid_traffic/
java -DRUNTIME_ENV=[c_slave1,d_slave1,eth2,10.10.2.1] -DPORTAL_LINKS=c_slave1:eth2,topnet.right_net.r.portal_if_10_10_2_0 -jar ~/primogeni/netscript/dist/jprime.jar create HybridTCPTrafficPC1 HybridTCPTrafficPC1.java 192.168.0.0/16

#PC1 OR No traffic file: (OR)
java -DRUNTIME_ENV=[c_slave1,d_slave1,eth2,10.10.2.1] -DPORTAL_LINKS=c_slave1:eth2,topnet.right_net.r.portal_if_10_10_2_0 -jar ~/primogeni/netscript/dist/jprime.jar create HybridTCPTrafficPC1_noTraffic HybridTCPTrafficPC1_noTraffic.java 192.168.0.0/16


#PC2 (on castor - h3, h4) In /root/expt/hybrid_traffic/
java -DRUNTIME_ENV=[c_slave1,d_slave1,eth2,10.10.2.2,eth3,10.10.3.1] -DPORTAL_LINKS=c_slave1:eth2,topnet.portal_router.portal_if_10_10_3_0,c_slave1:eth3,topnet.center_router.portal_if_10_10_2_0 -jar ~/primogeni/netscript/dist/jprime.jar create SolvingPortalTCP2 SolvingPortalTCP2.java 192.170.0.0/16



#PC1 Pollux: Now disable ip forwarding and run simulator and test ping again through simulator
sudo ip netns exec h2 sysctl -w net.ipv4.ip_forward=0
#PC2 castor
sudo ip netns exec h3 sysctl -w net.ipv4.ip_forward=0


sudo ip netns exec h1 ping -c1 10.10.3.2
#Shouldnt work
#sudo ip netns exec h4 ping -c1 10.10.1.2
#Shouldnt work


########################################################################################
############################################ RUN
########################################################################################

#PC1(on pollux - h2)
sudo ip netns exec h2 sysctl -w net.ipv4.ip_forward=0
sudo ip netns exec h2 /root/primogeni/netsim/primex -tp 10.10.2.1 271 1800 HybridTCPTrafficPC1_part_1.tlv
#OR RUN
sudo ip netns exec h2 /root/primogeni/netsim/primex -tp 10.10.2.1 271 1800 HybridTCPTrafficPC1_noTraffic_part_1.tlv

sudo ip netns exec h2 ifconfig h2-eth1 down
sudo ip netns exec h2 ifconfig h2-eth1 up
sudo ip netns exec h2 ip route del 10.10.3.0/24
sudo ip netns exec h2 ip route add 10.10.3.0/24 via 10.10.2.2
sudo ip netns exec h2 ip route





#PC2(on castor - h3)
sudo ip netns exec h3 sysctl -w net.ipv4.ip_forward=0
sudo ip netns exec h3 /root/primogeni/netsim/primex -tp 10.10.2.2 56 -tp 10.10.3.1 84 1800 SolvingPortalTCP2_part_1.tlv


#Route PC1
sudo ip netns exec h3 ifconfig h3-eth0 down
sudo ip netns exec h3 ifconfig h3-eth0 up
sudo ip netns exec h3 ip route del 10.10.1.0/24
sudo ip netns exec h3 ip route add 10.10.1.0/24 via 10.10.2.1
sudo ip netns exec h3 ip route del 192.168.0.0/16
sudo ip netns exec h3 ip route add 192.168.0.0/16 via 10.10.2.1
sudo ip netns exec h3 ip route
sudo ip netns exec h4 ip route


#(on pollux)
sudo ip netns exec h2 ping -c1 10.10.2.2

#castor
sudo ip netns exec h3 ping -c1 10.10.2.1



#Test
sudo ip netns exec h4 ping 10.10.3.1
sudo ip netns exec h4 ping 192.170.0.1
sudo ip netns exec h4 ping 192.168.0.1



#Capture packet: vv for verbose and X for payload
sudo ip netns exec h4 tcpdump -nnvvXS > tmp.txt






