Findings
===========================
Linux does not make tcp socket buffer usage available, at least not via /proc.

Netstat provides us with info about active sockets by querying /proc/net/tcp.
Netstat has now been deprecated, note that querying /proc/net/tcp has a
small overhead in addition to not neccesarily being an accurate reflection of
realtime. Introducing ss, which provides similar functionality. However, ss
obtains info about active sockets directly from kernel space using Netlink.
Netlink uses the traditional sockets api. This allows for asychronous
communication with the kernel instead of the synchronus processing associated
with system calls. To gain a better detailed understanding of netlink and its
advantages I highly recommend this article from the LinuxJournal
www.linkjournal.com/article/7356

http://serverfault.com/questions/386834/clarification-about-linux-tcp-window-size-and-delays

https://access.redhat.com/discussions/782343

http://packetbomb.com/how-to-troubleshoot-throughput-and-tcp-windows/#comment-93

Select() and Poll()
=====================================
Both are python wrappers for underlying system calls.

Select() builds a bitmap and turns on bits for fds of interest. Afterwards the
entire bitmap must be linearly scanned again. =O(highest fds)/

Poll() only requires listing the file descriptors of interest, =O(number of
fds)


